package bcn.glassteam.ecoglass;

import java.util.Random;

import android.os.Bundle;
import android.support.v4.app.FragmentActivity;
import android.view.KeyEvent;
import android.view.View;
import android.view.animation.AlphaAnimation;
import android.view.animation.Animation;
import android.widget.FrameLayout;
import bcn.glassteam.ecoglass.EcoPoints.EcoPointsReceiver;
import bcn.glassteam.ecoglass.EcoPoints.IEcoPointsListener;

import com.beyondar.android.fragment.BeyondarFragmentSupport;
import com.beyondar.android.world.GeoObject;
import com.beyondar.android.world.World;
import com.google.android.glass.app.Card;
import com.google.android.glass.app.Card.ImageLayout;

public class MainActivity extends FragmentActivity implements IEcoPointsListener {
	
	private final static float ECO_CARD_OPACITY = 0.9f;
	private final static long ECO_CARD_ANIMATION_DURATION = 500;
	
	private int mDriveEfficiency = 50;
	
	private FrameLayout mRootContainer;
	private BeyondarFragmentSupport mBeyondarFragment;
	private Card mEcoCard;
	private View mEcoCardView;
	private World mWorld;
	private EcoPointsReceiver mEcoPointsReceiver;
	private boolean isEcoCardShowing;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.main_layout);
        
        mRootContainer = (FrameLayout) findViewById(R.id.root_container);
        mBeyondarFragment = (BeyondarFragmentSupport) getSupportFragmentManager().findFragmentById(R.id.beyondarFragment);
        
        mWorld = new World(this);
        mWorld.setGeoPosition(41.386995, 2.171488);
        mWorld.setDefaultBitmap(R.drawable.ic_launcher);
        
        GeoObject obj1 = new GeoObject();
        obj1.setGeoPosition(41.387003, 2.171212);
        obj1.setImageResource(R.drawable.ic_launcher);
        mWorld.addBeyondarObject(obj1);
        
        mBeyondarFragment.setWorld(mWorld);
        
        mEcoCard = new Card(this);
        mEcoCard.setText("ASDSFD");
        mEcoCard.setFootnote("Lo que sea");
        mEcoCard.setImageLayout(ImageLayout.FULL);
        mEcoCard.addImage(R.drawable.leaf_bg);
        isEcoCardShowing = true;
        updateEcoCard();
        
        mEcoPointsReceiver = new EcoPointsReceiver(this);
        mEcoPointsReceiver.setEcoPointsListener(this);
        mEcoPointsReceiver.startReceiving();
    }
    
    @Override
	protected void onPause() {
		mEcoPointsReceiver.stopReceiving();
		super.onPause();
	}
    
    @Override
    public boolean onKeyDown(int keyCode, KeyEvent event) {
    	if (keyCode == KeyEvent.KEYCODE_DPAD_CENTER) {
    		if (isEcoCardShowing) {
    			animateEcoCardOpacity(0);
    			isEcoCardShowing = false;
    		} else {
    			animateEcoCardOpacity(ECO_CARD_OPACITY);
    			isEcoCardShowing = true;
    		}
    			
            return true;
        }
    	
    	return super.onKeyDown(keyCode, event);
    }
    
    private void animateEcoCardOpacity(float alpha) {
    	// Hack
    	float alphaFrom = isEcoCardShowing ? ECO_CARD_OPACITY : 0f;
    	Animation animation = new AlphaAnimation(alphaFrom, alpha);
    	animation.setDuration(ECO_CARD_ANIMATION_DURATION);
    	animation.setFillAfter(true);
    	mEcoCardView.clearAnimation();
    	mEcoCardView.startAnimation(animation);
    }
    
    private void updateEcoCard() {
    	
    }
    
	@Override
	public void onEcoPointsUpdated(int points) {
		// Randomly choose between positive or negative points
		if (new Random().nextBoolean()) {
			points *= -1;
		}
		
		mDriveEfficiency += points;
		updateEcoCard();
	}
}